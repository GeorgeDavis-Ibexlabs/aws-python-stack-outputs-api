---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: This CloudFormation stack deploys a simple HTTP API with backend logic running on Python + AWS Lambda and API Gateway. It captures the HTTP request body and push a Slack notification and/or JIRA ticket to pre-configured  endpoints.

Parameters:
  TestStageGitHubBranch:
    Description: 'GitHub Branch for the TEST stage of the HTTP API. Defaults to dev.'
    Type: String
    Default: dev

  S3LambdaPostStackOutputsApiKey:
    Description: S3 Object key for the Post Stack Outputs API Lambda function code zip file.
    Default: 'http-api-lambda-post-stack-outputs.zip'
    Type: String

  S3LambdaArcheraApiOnboardingKey:
    Description: S3 Object key for the Dynamic CloudFormation Templates Lambda function code zip file.
    Default: 'http-api-lambda-archera-api-onboarding.zip'
    Type: String

  ProdArcheraPartnerAccountId:
    Description: This is the Archera Partner Account ID for the Production Archera Account.
    MinLength: 24
    MaxLength: 256
    Type: String
    NoEcho: true

  ProdArcheraPartnerApiKey:
    Description: This is the Archera Partner API key for the Production Archera Account.
    MinLength: 24
    MaxLength: 256
    Type: String
    NoEcho: true

  TestArcheraPartnerAccountId:
    Description: This is the Archera Partner Account ID for the Test Archera Account.
    Default: ''
    Type: String
    NoEcho: true

  TestArcheraPartnerApiKey:
    Description: This is the Archera Partner API key for the Test Archera Account.
    Default: ''
    Type: String
    NoEcho: true

  EnableSlackIntegration:
    Description: Enable this flag to get Slack notifications.
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Type: String

  SlackWebhookUrl:
    Description: This is the Slack webhook URL.
    Default: ''
    Type: String
    NoEcho: true

  SlackChannelName:
    Description: This is the Slack channel name.
    Default: ''
    Type: String

  SlackUsername:
    Description: This is the Slack username.
    Default: ''
    Type: String

  SlackIconUrl:
    Description: This is the Slack username.
    Default: ''
    Type: String

  EnableJiraIntegration:
    Description: Enable this flag to automate JIRA ticket creation.
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Type: String

  JiraCloudUrl:
    Description: This is the URL for your JIRA Cloud instance.
    Default: ''
    Type: String

  JiraProjectKey:
    Description: This is the JIRA Project key.
    Default: ''
    Type: String

  JiraAuthEmail:
    Description: This is the JIRA Authentication email.
    Default: ''
    Type: String

  JiraApiToken:
    Description: This is the JIRA API token.
    Default: ''
    Type: String
    NoEcho: true

Resources:
  # This section contains the list of SSM Parameters
  SSMParameterSlackWebhookUrl:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Description: This is the Slack Webhook URL
      Name: SLACK_WEBHOOK_URL
      Type: String
      Value: !Ref SlackWebhookUrl

  SSMParameterJiraApiToken:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Description: JIRA API token
      Name: JIRA_API_TOKEN
      Type: String
      Value: !Ref JiraApiToken

  SSMParameterProdArcheraPartnerAccountId:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Description: Archera Partner Account Id for PROD environments
      Name: PROD_ARCHERA_PARTNER_ACCOUNT_ID
      Type: String
      Value: !Ref ProdArcheraPartnerAccountId

  SSMParameterProdArcheraPartnerApiKey:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Description: Archera Partner Account Id for PROD environments
      Name: PROD_ARCHERA_PARTNER_API_KEY
      Type: String
      Value: !Ref ProdArcheraPartnerApiKey

  SSMParameterTestArcheraPartnerAccountId:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Description: Archera Partner Account Id for TEST environments
      Name: TEST_ARCHERA_PARTNER_ACCOUNT_ID
      Type: String
      Value: !Ref TestArcheraPartnerAccountId

  SSMParameterTestArcheraPartnerApiKey:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Description: Archera Partner Account Id for TEST environments
      Name: TEST_ARCHERA_PARTNER_API_KEY
      Type: String
      Value: !Ref TestArcheraPartnerApiKey

  ServerlessHttpApiLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: RetainExceptOnCreate
    UpdateReplacePolicy: Retain
    Properties:
      LogGroupName: /aws/http-api/aws-python-stack-outputs-api

  ServerlessHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Name: aws-python-stack-outputs-api
      StageName: $default
      AccessLogSettings:
        DestinationArn: !GetAtt ServerlessHttpApiLogGroup.Arn
        Format: '{"requestTime":"$context.requestTime","requestId":"$context.requestId","apiId":"$context.apiId","resourcePath":"$context.routeKey","path":"$context.path","httpMethod":"$context.httpMethod","stage":"$context.stage","status":"$context.status","integrationStatus":"$context.integrationStatus","integrationLatency":"$context.integrationLatency","responseLatency":"$context.responseLatency","responseLength":"$context.responseLength","errorMessage":"$context.error.message","format":"SLS_HTTP_API_LOG","version":"1.0.0"}'
      DefaultRouteSettings:
        DetailedMetricsEnabled: false
      PropagateTags: true
      Domain:
        DomainName: api.ibexlabs.com
        CertificateArn: arn:aws:acm:us-east-1:651188399649:certificate/359223e5-f67f-4a16-bb4f-7e975d940900
        EndpointConfiguration: REGIONAL
        Route53:
          HostedZoneId: Z1QA27E6ZDCKYK
        BasePath:
          - /
        SecurityPolicy: TLS_1_2

  ServerlessHttpApiPostStackOutputLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AllowLogging
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:TagResource
                Resource:
                  - !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*'
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*:*'
        - PolicyName: AllowSSMAndSecretsManager
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                Resource:
                  - !Sub 'arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/PROD_ARCHERA_PARTNER_ACCOUNT_ID'
                  - !Sub 'arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/PROD_ARCHERA_PARTNER_API_KEY'
                  - !Sub 'arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/TEST_ARCHERA_PARTNER_ACCOUNT_ID'
                  - !Sub 'arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/TEST_ARCHERA_PARTNER_API_KEY'
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource:
                  - !Sub 'arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*'

  ServerlessHttpApiPostArcheraApiOnboardingLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AllowLogging
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*'
        - PolicyName: AllowCloudFormation
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStackResources
                  - cloudformation:DescribeStacks
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                  - cloudformation:DeleteStack
                Resource: !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/IbexlabsArcheraCFNStack-*/*'
        - PolicyName: AllowIAM
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:CreateRole
                  - iam:GetRolePolicy
                  - iam:PutRolePolicy
                  - iam:TagRole
                  - iam:DeleteRole
                  - iam:DeleteRolePolicy
                Resource: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/ReservedAI-*'
        - PolicyName: AllowS3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::wafr.ibexlabs.com'
                  - !Sub 'arn:${AWS::Partition}:s3:::wafr.ibexlabs.com/*'
                  - !Sub 'arn:${AWS::Partition}:s3:::*.wafr.ibexlabs.com'
                  - !Sub 'arn:${AWS::Partition}:s3:::*.wafr.ibexlabs.com/*'
        - PolicyName: AllowSSMAndSecretsManager
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                Resource:
                  - !Sub 'arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter:PROD_ARCHERA_PARTNER_ACCOUNT_ID'
                  - !Sub 'arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter:PROD_ARCHERA_PARTNER_API_KEY'
                  - !Sub 'arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter:TEST_ARCHERA_PARTNER_ACCOUNT_ID'
                  - !Sub 'arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter:TEST_ARCHERA_PARTNER_API_KEY'
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource:
                  - !Sub 'arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*'

  # ServerlessHttpApiProdPostStackOutputServerlessFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     Architectures:
  #       - x86_64
  #     Events:
  #       ApiEvent:
  #         Type: HttpApi
  #         Properties:
  #           Path: /prod/send
  #           Method: POST
  #           ApiId: !Ref ServerlessHttpApi
  #           PayloadFormatVersion: '2.0'
  #           TimeoutInMillis: 30000
  #     Runtime: python3.10
  #     Handler: postStackOutputLambda.lambda_handler
  #     CodeUri:
  #       Bucket: !FindInMap [RegionMap, !Ref 'AWS::Region', S3BucketName]
  #       Key: !Sub 'aws-python-stack-outputs-api/main/${S3LambdaPostStackOutputsApiKey}'
  #     Environment:
  #       Variables:
  #         REGION: !Ref AWS::Region
  #         GITHUB_BRANCH: main
  #         ENABLE_SLACK_INTEGRATION: !Ref EnableSlackIntegration
  #         SLACK_WEBHOOK_URL: !Ref SlackWebhookUrl
  #         SLACK_CHANNEL: !Ref SlackChannelName
  #         SLACK_USERNAME: !Ref SlackUsername
  #         SLACK_ICON_URL: !Ref SlackIconUrl
  #         ENABLE_JIRA_INTEGRATION: !Ref EnableJiraIntegration
  #         JIRA_CLOUD_URL: !Ref JiraCloudUrl
  #         JIRA_PROJECT_KEY: !Ref JiraProjectKey
  #         JIRA_AUTH_EMAIL: !Ref JiraAuthEmail
  #         JIRA_API_TOKEN: !Ref JiraApiToken
  #         LOG_LEVEL: DEBUG
  #     PackageType: Zip
  #     MemorySize: 128
  #     Timeout: 30
  #     PropagateTags: true
  #     Role: !GetAtt ServerlessHttpApiPostStackOutputLambdaRole.Arn

  # ServerlessHttpApiPostArcheraApiProdOnboardingServerlessFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     Architectures:
  #       - x86_64
  #     Events:
  #       ApiEvent:
  #         Type: HttpApi
  #         Properties:
  #           Path: /prod/archera-onboarding
  #           Method: POST
  #           ApiId: !Ref ServerlessHttpApi
  #           PayloadFormatVersion: '2.0'
  #           TimeoutInMillis: 30000
  #     Runtime: python3.10
  #     Handler: handler.lambda_handler
  #     CodeUri:
  #       Bucket: !FindInMap [RegionMap, !Ref 'AWS::Region', S3BucketName]
  #       Key: !Sub 'aws-python-stack-outputs-api/main/${S3LambdaArcheraApiOnboardingKey}'
  #     Environment:
  #       Variables:
  #         STACK_ID: !Ref AWS::StackId
  #         REGION: !Ref AWS::Region
  #         AWS_ACCOUNT_ID: !Ref AWS::AccountId
  #         BOTOCORE_LOGLEVEL: DEBUG
  #         LOGLEVEL: DEBUG
  #         ARCHERA_BASE_URL: 'https://api.archera.ai/v2'
  #         SSM_KEY_ARCHERA_PARTNER_ORG_ID: !Ref SSMParameterProdArcheraPartnerAccountId
  #         SSM_KEY_ARCHERA_PARTNER_API_KEY: !Ref SSMParameterProdArcheraPartnerApiKey
  #         TEMPLATE_BUCKET_NAME: !FindInMap [RegionMap, !Ref 'AWS::Region', S3BucketName]
  #         TEMPLATE_KEY_PREFIX: 'wafr-ftr-onboarding/archera-deployments/'
  #     PackageType: Zip
  #     MemorySize: 128
  #     Timeout: 30
  #     PropagateTags: true
  #     Role: !GetAtt ServerlessHttpApiPostArcheraApiOnboardingLambdaRole.Arn

  ServerlessHttpApiTestPostStackOutputServerlessFunction:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - x86_64
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            Path: /test/send
            Method: POST
            ApiId: !Ref ServerlessHttpApi
            PayloadFormatVersion: '2.0'
            TimeoutInMillis: 30000
      Runtime: python3.10
      Handler: postStackOutputLambda.lambda_handler
      CodeUri:
        Bucket: !FindInMap [RegionMap, !Ref 'AWS::Region', S3BucketName]
        Key: !Sub 'aws-python-stack-outputs-api/${TestStageGitHubBranch}/${S3LambdaPostStackOutputsApiKey}'
      Environment:
        Variables:
          REGION: !Ref AWS::Region
          GITHUB_BRANCH: !Ref TestStageGitHubBranch
          ENABLE_SLACK_INTEGRATION: !Ref EnableSlackIntegration
          SLACK_WEBHOOK_URL: !Ref SlackWebhookUrl
          SLACK_CHANNEL: !Ref SlackChannelName
          SLACK_USERNAME: !Ref SlackUsername
          SLACK_ICON_URL: !Ref SlackIconUrl
          ENABLE_JIRA_INTEGRATION: !Ref EnableJiraIntegration
          JIRA_CLOUD_URL: !Ref JiraCloudUrl
          JIRA_PROJECT_KEY: !Ref JiraProjectKey
          JIRA_AUTH_EMAIL: !Ref JiraAuthEmail
          JIRA_API_TOKEN: !Ref JiraApiToken
          LOG_LEVEL: DEBUG
      PackageType: Zip
      MemorySize: 128
      Timeout: 30
      PropagateTags: true
      Role: !GetAtt ServerlessHttpApiPostStackOutputLambdaRole.Arn

  ServerlessHttpApiPostArcheraApiTestOnboardingServerlessFunction:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - x86_64
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            Path: /test/archera-onboarding
            Method: POST
            ApiId: !Ref ServerlessHttpApi
            PayloadFormatVersion: '2.0'
            TimeoutInMillis: 30000
      Runtime: python3.10
      Handler: handler.lambda_handler
      CodeUri:
        Bucket: !FindInMap [RegionMap, !Ref 'AWS::Region', S3BucketName]
        Key: !Sub 'aws-python-stack-outputs-api/${TestStageGitHubBranch}/${S3LambdaArcheraApiOnboardingKey}'
      Environment:
        Variables:
          STACK_ID: !Ref AWS::StackId
          REGION: !Ref AWS::Region
          AWS_ACCOUNT_ID: !Ref AWS::AccountId
          BOTOCORE_LOGLEVEL: DEBUG
          LOGLEVEL: DEBUG
          ARCHERA_BASE_URL: 'https://api.archera.ai/v2'
          SSM_KEY_ARCHERA_PARTNER_ORG_ID: !Ref SSMParameterTestArcheraPartnerAccountId
          SSM_KEY_ARCHERA_PARTNER_API_KEY: !Ref SSMParameterTestArcheraPartnerApiKey
          TEMPLATE_BUCKET_NAME: !FindInMap [RegionMap, !Ref 'AWS::Region', S3BucketName]
          TEMPLATE_KEY_PREFIX: 'wafr-ftr-onboarding/archera-deployments/'
      PackageType: Zip
      MemorySize: 128
      Timeout: 30
      PropagateTags: true
      Role: !GetAtt ServerlessHttpApiPostArcheraApiOnboardingLambdaRole.Arn

Outputs:
  ServerlessHttpApiId:
    Description: Id of the Serverless HTTP API
    Value: !Ref ServerlessHttpApi

  ServerlessHttpApiProdUrl:
    Description: URL of the Serverless HTTP API (PROD)
    Value: !Sub 'https://${ServerlessHttpApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/prod'

  ServerlessHttpApiTestUrl:
    Description: URL of the Serverless HTTP API (TEST)
    Value: !Sub 'https://${ServerlessHttpApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/test'

Mappings:
  RegionMap:
    us-east-1:
      S3BucketName: us-east-1.wafr.ibexlabs.com
    us-east-2:
      S3BucketName: us-east-2.wafr.ibexlabs.com
    us-west-1:
      S3BucketName: us-west-1.wafr.ibexlabs.com
    us-west-2:
      S3BucketName: wafr.ibexlabs.com
    ca-central-1:
      S3BucketName: ca-central-1.wafr.ibexlabs.com

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: GitHub code repository branch.
        Parameters:
          - TestStageGitHubBranch

      - Label:
          default: Lambda Code Zip file configuration.
        Parameters:
          - S3LambdaPostStackOutputsApiKey
          - S3LambdaArcheraApiOnboardingKey

      - Label:
          default: Slack Integration configuration.
        Parameters:
          - EnableSlackIntegration
          - SlackWebhookUrl
          - SlackChannelName
          - SlackUsername
          - SlackIconUrl

      - Label:
          default: JIRA Integration configuration.
        Parameters:
          - EnableJiraIntegration
          - JiraCloudUrl
          - JiraProjectKey
          - JiraAuthEmail
          - JiraApiToken

      - Label:
          default: PROD Archera Integration configuration.
        Parameters:
          - ProdArcheraPartnerAccountId
          - ProdArcheraPartnerApiKey

      - Label:
          default: TEST Archera Integration configuration.
        Parameters:
          - TestArcheraPartnerAccountId
          - TestArcheraPartnerApiKey

    ParameterLabels:
      TestStageGitHubBranch:
        default: 'Please provide the GitHub branch to use. Recommended to leave this as `dev`.'

      S3LambdaPostStackOutputsApiKey:
        default: 'Please provide the S3 Object key for the Post Stack Outputs API Lambda function code zip file.'

      S3LambdaArcheraApiOnboardingKey:
        default: 'Please provide the S3 Object key for the Dynamic CloudFormation Templates Lambda function code zip file.'